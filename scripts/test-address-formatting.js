#!/usr/bin/env node

// –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–¥—Ä–µ—Å–∞ –ù–æ–≤–æ–π –ü–æ—á—Ç—ã
const testAddress = `{"id":"529cf62a-54ba-47af-8c5e-7f6073209d48","userId":"7907d65a-35d1-4c44-b941-76fe92c9d551","name":"—Ñ—ñ–≤—Ñ—ñ–≤","isDefault":true,"street":"","city":"","postalCode":"","country":"Ukraine","npCityName":"–ö–æ—Ü—é–±–∏–Ω—Å—å–∫–µ","npCityFullName":"—Å–º—Ç –ö–æ—Ü—é–±–∏–Ω—Å—å–∫–µ, –ë—É—á–∞–Ω—Å—å–∫–∏–π —Ä-–Ω, –ö–∏—ó–≤—Å—å–∫–∞ –æ–±–ª.","npWarehouse":"–ü–æ—à—Ç–æ–º–∞—Ç \\"–ù–æ–≤–∞ –ü–æ—à—Ç–∞\\" ‚Ññ2631: –≤—É–ª. –ü–æ–Ω–æ–º–∞—Ä—å–æ–≤–∞, 26 –∫1, –ø—ñ–¥'—ó–∑–¥ ‚Ññ4 (–¢–Ü–õ–¨–ö–ò –î–õ–Ø –ú–ï–®–ö–ê–ù–¶–Ü–í)","useNovaPost":true,"createdAt":"2025-08-28T22:11:57.000Z","updatedAt":"2025-08-28T22:11:57.000Z"}`;

console.log('üß™ Testing address formatting...');
console.log('üìù Raw address JSON:');
console.log(testAddress);
console.log();

// –°–∏–º—É–ª–∏—Ä—É–µ–º –º–µ—Ç–æ–¥ formatDeliveryAddress
function formatDeliveryAddress(address) {
    if (!address) return '';

    // –ï—Å–ª–∏ –∞–¥—Ä–µ—Å –ø—Ä–∏—à–µ–ª –∫–∞–∫ —Å—Ç—Ä–æ–∫–∞ JSON, —Ä–∞—Å–ø–∞—Ä—Å–∏–º –µ–≥–æ
    let parsedAddress = address;
    if (typeof address === 'string') {
        try {
            parsedAddress = JSON.parse(address);
        } catch (e) {
            console.log('[GoogleSheetsService] Failed to parse delivery address JSON:', address);
            return '–û—à–∏–±–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∞–¥—Ä–µ—Å–∞';
        }
    }

    let result = '';

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ Nova Poshta –∞–¥—Ä–µ—Å–∞
    if (parsedAddress.useNovaPost && parsedAddress.npWarehouse) {
        if (parsedAddress.npCityFullName) result += parsedAddress.npCityFullName;
        result += `, ${parsedAddress.npWarehouse}`;
        return result;
    }

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ–±—ã—á–Ω–æ–≥–æ –∞–¥—Ä–µ—Å–∞
    if (parsedAddress.street) result += parsedAddress.street;
    if (parsedAddress.city) result += result ? `, ${parsedAddress.city}` : parsedAddress.city;
    if (parsedAddress.postalCode) result += result ? `, ${parsedAddress.postalCode}` : parsedAddress.postalCode;
    if (parsedAddress.country && parsedAddress.country !== 'Ukraine')
        result += result ? `, ${parsedAddress.country}` : parsedAddress.country;

    return result || '–ê–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏ –Ω–µ —É–∫–∞–∑–∞–Ω';
}

const formattedAddress = formatDeliveryAddress(testAddress);

console.log('‚úÖ Formatted address result:');
console.log(formattedAddress);
console.log();
console.log('üìä Address should appear in Google Sheets column F as:');
console.log(`"${formattedAddress}"`);
console.log();

if (formattedAddress.includes('–ö–æ—Ü—é–±–∏–Ω—Å—å–∫–µ') && formattedAddress.includes('–ü–æ—à—Ç–æ–º–∞—Ç')) {
    console.log('üéâ SUCCESS: Address contains both city and warehouse information!');
} else {
    console.log('‚ùå ERROR: Address formatting is incomplete');
}
