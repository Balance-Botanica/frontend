import { writable, get } from 'svelte/store';
import { browser } from '$app/environment';

// –¢–∏–ø—ã –¥–ª—è cookie consent
export type CookieConsentStatus = 'none' | 'necessary' | 'all';

// –î–µ—Ç–∞–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ cookies
export interface CookieSettings {
	necessary: boolean; // –í—Å–µ–≥–¥–∞ true, –Ω–µ–ª—å–∑—è –æ—Ç–∫–ª—é—á–∏—Ç—å
	statistics: boolean; // –°—Ç–∞—Ç–∏—Å—Ç–∏—á–µ—Å–∫–∏–µ cookies
	marketing: boolean; // –ú–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤—ã–µ cookies
}

interface CookieConsentState {
	status: CookieConsentStatus;
	isVisible: boolean;
	hasShown: boolean;
	showManageModal: boolean; // –ü–æ–∫–∞–∑—ã–≤–∞—Ç—å –ª–∏ –º–æ–¥–∞–ª–∫—É —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
	settings: CookieSettings;
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–∞—á–∞–ª—å–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∏–∑ localStorage
function getInitialState(): CookieConsentState {
	if (!browser) {
		return {
			status: 'none',
			isVisible: false,
			hasShown: false,
			showManageModal: false,
			settings: {
				necessary: true, // –í—Å–µ–≥–¥–∞ –≤–∫–ª—é—á–µ–Ω–æ
				statistics: false,
				marketing: false
			}
		};
	}

	const stored = localStorage.getItem('cookie-consent');
	if (stored) {
		try {
			const parsed = JSON.parse(stored);
			return {
				status: parsed.status || 'none',
				isVisible: false, // –ù–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –µ—Å–ª–∏ —É–∂–µ –≤—ã–±—Ä–∞–ª–∏
				hasShown: true,
				showManageModal: false,
				settings: parsed.settings || {
					necessary: true,
					statistics: false,
					marketing: false
				}
			};
		} catch {
			// –ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞, —Å–±—Ä–∞—Å—ã–≤–∞–µ–º
		}
	}

	return {
		status: 'none',
		isVisible: false,
		hasShown: false,
		showManageModal: false,
		settings: {
			necessary: true, // –í—Å–µ–≥–¥–∞ –≤–∫–ª—é—á–µ–Ω–æ
			statistics: false,
			marketing: false
		}
	};
}

// –°–æ–∑–¥–∞–µ–º store
export const cookieConsentStore = writable<CookieConsentState>(getInitialState());

// –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
export function showCookieConsent() {
	cookieConsentStore.update((state) => ({
		...state,
		isVisible: true
	}));
}

export function hideCookieConsent() {
	cookieConsentStore.update((state) => ({
		...state,
		isVisible: false
	}));
}

export function showManageModal() {
	cookieConsentStore.update((state) => ({
		...state,
		showManageModal: true
		// Banner –æ—Å—Ç–∞–µ—Ç—Å—è –≤–∏–¥–∏–º—ã–º, —Ç–æ–ª—å–∫–æ –∫–æ–Ω—Ç–µ–Ω—Ç –º–µ–Ω—è–µ—Ç—Å—è
	}));
}

export function hideManageModal() {
	cookieConsentStore.update((state) => ({
		...state,
		showManageModal: false
		// Banner –æ—Å—Ç–∞–µ—Ç—Å—è –≤–∏–¥–∏–º—ã–º, —Ç–æ–ª—å–∫–æ –∫–æ–Ω—Ç–µ–Ω—Ç –º–µ–Ω—è–µ—Ç—Å—è
	}));
}

export function updateCookieSetting(key: keyof CookieSettings, value: boolean) {
	cookieConsentStore.update((state) => {
		const newSettings = { ...state.settings, [key]: value };
		const newState = { ...state, settings: newSettings };

		// –û–±–Ω–æ–≤–ª—è–µ–º localStorage
		if (browser) {
			localStorage.setItem('cookie-consent', JSON.stringify(newState));
		}

		return newState;
	});
}

export function acceptSelected() {
	const state = get(cookieConsentStore);
	const newState: CookieConsentState = {
		...state,
		status: 'necessary', // –ë–∞–∑–æ–≤—ã–π —Å—Ç–∞—Ç—É—Å –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö
		isVisible: false,
		hasShown: true,
		showManageModal: false
	};

	// –ï—Å–ª–∏ –≤–∫–ª—é—á–µ–Ω—ã —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏–ª–∏ –º–∞—Ä–∫–µ—Ç–∏–Ω–≥, –æ–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å
	if (state.settings.statistics || state.settings.marketing) {
		newState.status = 'all';
	}

	cookieConsentStore.set(newState);

	if (browser) {
		localStorage.setItem('cookie-consent', JSON.stringify(newState));
	}
}

export function acceptNecessary() {
	const newState: CookieConsentState = {
		status: 'necessary',
		isVisible: false,
		hasShown: true,
		showManageModal: false,
		settings: {
			necessary: true,
			statistics: false,
			marketing: false
		}
	};

	cookieConsentStore.set(newState);

	if (browser) {
		localStorage.setItem('cookie-consent', JSON.stringify(newState));
	}
}

export function acceptAll() {
	const newState: CookieConsentState = {
		status: 'all',
		isVisible: false,
		hasShown: true,
		showManageModal: false,
		settings: {
			necessary: true,
			statistics: true,
			marketing: true
		}
	};

	cookieConsentStore.set(newState);

	if (browser) {
		localStorage.setItem('cookie-consent', JSON.stringify(newState));
	}
}

export function resetCookieConsent() {
	const newState: CookieConsentState = {
		status: 'none',
		isVisible: false,
		hasShown: false,
		showManageModal: false,
		settings: {
			necessary: true,
			statistics: false,
			marketing: false
		}
	};

	cookieConsentStore.set(newState);

	if (browser) {
		localStorage.removeItem('cookie-consent');
	}
}

// TODO: –£–¥–∞–ª–∏—Ç—å —ç—Ç—É —Ñ—É–Ω–∫—Ü–∏—é –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ - —Å–±—Ä–∞—Å—ã–≤–∞–µ—Ç –∫—É–∫–∏ –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –±–∞–Ω–Ω–µ—Ä —Å–Ω–æ–≤–∞
export function resetCookieConsentForDevelopment() {
	const newState: CookieConsentState = {
		status: 'none',
		isVisible: true, // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –±–∞–Ω–Ω–µ—Ä —Å–Ω–æ–≤–∞
		hasShown: false,
		showManageModal: false,
		settings: {
			necessary: true,
			statistics: false,
			marketing: false
		}
	};

	cookieConsentStore.set(newState);

	if (browser) {
		localStorage.removeItem('cookie-consent');
	}
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏, –Ω—É–∂–Ω–æ –ª–∏ –ø–æ–∫–∞–∑–∞—Ç—å consent
export function shouldShowCookieConsent(): boolean {
	if (!browser) return false;

	const stored = localStorage.getItem('cookie-consent');
	return !stored; // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –Ω–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–≥–æ –≤—ã–±–æ—Ä–∞
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–≥–æ —Å—Ç–∞—Ç—É—Å–∞
export function getCookieConsentStatus(): CookieConsentStatus {
	if (!browser) return 'none';

	const stored = localStorage.getItem('cookie-consent');
	if (stored) {
		try {
			const parsed = JSON.parse(stored);
			return parsed.status || 'none';
		} catch {
			return 'none';
		}
	}

	return 'none';
}

// TODO: –£–¥–∞–ª–∏—Ç—å –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
// –î–µ–ª–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–æ—Å—Ç—É–ø–Ω–æ–π –≥–ª–æ–±–∞–ª—å–Ω–æ –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —á–µ—Ä–µ–∑ –∫–æ–Ω—Å–æ–ª—å
if (browser) {
	(window as any).resetCookieConsent = resetCookieConsentForDevelopment;
	(window as any).getCookieStatus = getCookieConsentStatus;
	console.log('üç™ Cookie Consent Debug Functions:');
	console.log('  - resetCookieConsent() - —Å–±—Ä–æ—Å–∏—Ç—å –∫—É–∫–∏ –∏ –ø–æ–∫–∞–∑–∞—Ç—å –±–∞–Ω–Ω–µ—Ä');
	console.log('  - getCookieStatus() - –ø–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å –∫—É–∫–∏');
}
